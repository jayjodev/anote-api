version: "3.7"
services:
  backend:
    container_name: backend
    restart: always
    build:
      context: ./backend
      dockerfile: Dockerfile-prod
    env_file: .env.prod
    environment:
      - BACKEND_PORT=$BACKEND_PORT
      - MONGO_DB=$MONGO_DB
      - REDIS_DB=$REDIS_DB
      - REDIS_STOCK_TIME=$REDIS_STOCK_TIME
      - NINE_STOCK_TIME=$NINE_STOCK_TIME
      - INPUT_STOCK_TIME=$INPUT_STOCK_TIME
      - FRONTEND=$FRONTEND

    # Add volumnes
    volumes:
      # NOT in production
      # Inside container
      - /backend/node_modules
      # Outside container
      # ./backend is local machine : /backend is in the docker
      - ./backend:/backend
      # - backend_data:/backend
    ports:
      - "3000:3000"
    depends_on:
      - mongo_db
      - redis_db
    networks:
      - api

  redis_db:
    container_name: redis_db
    restart: always
    build:
      context: ./redis
      dockerfile: Dockerfile
    volumes:
      - ./data/redis:/data
      # - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - api

  mongo_db:
    container_name: mongo_db
    restart: always
    image: mongo
    volumes:
      - ./data/mongo_db:/data/db
      # - mongo_data:/data/db

    ports:
      - "27017:27017"
    networks:
      - api

  nginx:
    container_name: nginx
    restart: always
    build: ./nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/certs:/etc/nginx/certs
    #  - /Users/jayjo/Desktop/certs:/etc/nginx/certs
    ## Source volumes to Target volumes

    depends_on:
      - backend
    networks:
      - api

# volumes:
#   backend_data:
#   redis_data:
#   mongo_data:

networks:
  api: