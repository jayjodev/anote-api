version: "3.7"
services:
  api:
    container_name: api
    restart: always
    build:
      context: ./api
      dockerfile: Dockerfile
    entrypoint: ["npm", "run", "$ENV"]
    environment:
      - BACKEND_PORT=$BACKEND_PORT
      - MONGO_DB=$MONGO_DB
      - REDIS_DB=$REDIS_DB
      - REDIS_STOCK_TIME=$REDIS_STOCK_TIME
      - NINE_STOCK_TIME=$NINE_STOCK_TIME
      - INPUT_STOCK_TIME=$INPUT_STOCK_TIME
      - FRONTEND=$FRONTEND

    # Add volumnes
    volumes:
      - api_data:/api
    ports:
      - "4000:4000"
    depends_on:
      - mongo_db
      - redis_db
    networks:
      - api_server

  redis_db:
    container_name: redis_db
    restart: always
    build:
      context: ./resources/redis
      dockerfile: Dockerfile
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - api_server

  mongo_db:
    container_name: mongo_db
    restart: always
    image: mongo
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - api_server

  cadvisor:
    container_name: cadvisor
    restart: always
    image: google/cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - redis_db

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./resources/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - cadvisor

  grafana:
    container_name: grafana
    image: grafana/grafana:5.1.0
    ports:
      - 3000:3000

  nginx:
    container_name: nginx
    restart: always
    build: ./resources/nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./resources/nginx/certs:/etc/nginx/certs
    depends_on:
      - api
    networks:
      - api_server

volumes:
  api_data:
  redis_data:
  mongo_data:

networks:
  api_server:
